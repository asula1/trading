version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - market-data-service
      - trading-service
      - ai-prediction-service
      - account-service
      - position-service
      - risk-management-service
      - backtesting-service
      - analysis-services
      - monitoring-services

  # Core Services
  market-data-service:
    build: ./market-data-service
    ports:
      - "8080:8080"
    environment:
      - UPBIT_API_KEY=${UPBIT_API_KEY}
      - UPBIT_SECRET_KEY=${UPBIT_SECRET_KEY}

  trading-service:
    build: ./trading-service
    ports:
      - "8081:8081"
    environment:
      - UPBIT_API_KEY=${UPBIT_API_KEY}
      - UPBIT_SECRET_KEY=${UPBIT_SECRET_KEY}

  ai-prediction-service:
    build: ./ai-prediction-service
    ports:
      - "8082:8082"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Infrastructure Services
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  consul:
    image: consul:1.15
    ports:
      - "8500:8500"
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: trading
      POSTGRES_PASSWORD: trading123
      POSTGRES_DB: trading_db

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "5775:5775/udp"
      - "5778:5778"
      - "6831:6831/udp"
      - "6832:6832/udp"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  # Specialized Services
  account-service:
    build: ./account-service
    ports:
      - "8083:8083"

  position-service:
    build: ./position-service
    ports:
      - "8084:8084"

  risk-management-service:
    build: ./risk-management-service
    ports:
      - "8085:8085"

  backtesting-service:
    build: ./backtesting-service
    ports:
      - "8086:8086"

  analysis-services:
    build: ./analysis-services
    ports:
      - "8087-8089:8087-8089"

  monitoring-services:
    build: ./monitoring-services
    ports:
      - "8090-8092:8090-8092" 